{"ast":null,"code":"var _jsxFileName = \"/Users/Courtney/Desktop/Bootcamp/flora/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import flowers from \"./flowers\";\n//import logo here\n\nimport './App.css';\nimport Preloader from \"../src/components/Preloader\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from 'apollo-link-context'; //website components\n\nimport Navbar from \"./components/Navbar\"; // import Footer from './components/Footer';\n//website pages\n\nimport Home from \"./components/pages/Home\"; // import Cart from \"./components/pages/Cart\";\n// import Contact from \"./components/pages/Contact\";\n// import Spin from \"./components/pages/Spin\";\n// import Login from './components/pages/Login';\n// import Signup from './components/pages/Signup';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); //put other website components here\n// import NotFound from './pages/NotFound';\n// import Footer from \"./components/Footer\";\n\nfunction App() {\n  _s();\n\n  // const navigate = useNavigate();\n  // preloader\n  const [load, upadateLoad] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      upadateLoad(false);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, []); // const handlePageChange = (pageURL) => {\n  //   navigate(pageURL);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Preloader, {\n        load: load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        id: load ? \"no-scroll\" : \"scroll\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QJcYtRRLEamkbvAQSdhAMw7XmDg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Courtney/Desktop/Bootcamp/flora/client/src/App.js"],"names":["React","useState","useEffect","Preloader","BrowserRouter","Router","Route","Routes","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Navbar","Home","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","load","upadateLoad","timer","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,qBAA3B,C,CAKA;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AAGA;;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC9BK,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAD,WAAkB;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AAFuB,CAAjB,CAAf,C,CAOA;AAGA;AAEA;;AAKA,SAASmB,GAAT,GAAe;AAAA;;AACb;AACE;AACA,QAAM,CAACC,IAAD,EAAOC,WAAP,IAAsB7B,QAAQ,CAAC,IAAD,CAApC;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD,GANQ,EAMN,EANM,CAAT,CALa,CAab;AACE;AACF;;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEP,MAAxB;AAAA,2BACA;AAAA,8BACA,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEK;AAAjB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,EAAE,EAAEA,IAAI,GAAG,WAAH,GAAiB,QAA9C;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBC;;GAtCMD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//import flowers from \"./flowers\";\n//import logo here\nimport './App.css';\nimport Preloader from \"../src/components/Preloader\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport { \n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink \n} from \"@apollo/client\";\nimport { setContext } from 'apollo-link-context';\n\n\n\n\n//website components\n\nimport Navbar from \"./components/Navbar\";\n// import Footer from './components/Footer';\n\n\n//website pages\nimport Home from \"./components/pages/Home\";\n// import Cart from \"./components/pages/Cart\";\n// import Contact from \"./components/pages/Contact\";\n// import Spin from \"./components/pages/Spin\";\n// import Login from './components/pages/Login';\n// import Signup from './components/pages/Signup';\n\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\n\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers, \n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), \n  cache: new InMemoryCache()\n});\n\n\n\n//put other website components here\n\n\n// import NotFound from './pages/NotFound';\n\n// import Footer from \"./components/Footer\";\n\n\n\n\nfunction App() {\n  // const navigate = useNavigate();\n    // preloader\n    const [load, upadateLoad] = useState(true);\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      upadateLoad(false);\n    }, 2000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  // const handlePageChange = (pageURL) => {\n    //   navigate(pageURL);\n  // }\n\n  return (\n    <ApolloProvider client={client}>\n    <div>\n    <Preloader load={load} />\n    <div className=\"App\" id={load ? \"no-scroll\" : \"scroll\"}>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Home/>} />\n        {/* <Route path=\"/Cart\" element={<Cart/>} />\n        <Route path=\"/Contact\" element={<Contact/>} />\n      <Route path=\"/Spin\" element={<Spin/>}/> */}\n        {/* <Route path=\"/flowers/:id\" element={<Detail />} */}\n        {/* <Route path=\"/login\" element={<Login />}/> */}\n        {/* <Route path=\"/signup\" element={<Signup />}/>*/}\n  \n      </Routes>\n      {/* <Footer /> */}\n    </div>\n    </div>\n    </ApolloProvider>\n );\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}