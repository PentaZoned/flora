{"ast":null,"code":"var _jsxFileName = \"/Users/Courtney/Desktop/Bootcamp/flora/client/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, AppBar, Toolbar, Typography, IconButton, Box, Menu, MenuItem, Button } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport useStyles from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [{\n  pageTitle: \"Flora\",\n  pageURL: \"/\"\n}, {\n  pageTitle: \"Cart\",\n  pageURL: \"/Cart\"\n}, {\n  pageTitle: \"Contact\",\n  pageURL: \"/Contact\"\n}, {\n  pageTitle: \"Spin\",\n  pageURL: \"/Spin\"\n}];\n\nconst Navbar = props => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = pageURL => {\n    setAnchorElNav(null);\n    if (pageURL) props.handlePageChange(pageURL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: classes.navStyle,\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: \"Flora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            open: Boolean(anchorElNav),\n            onClose: () => {\n              handleCloseNavMenu(null);\n            },\n            sx: {\n              display: {\n                xs: 'block',\n                md: 'none'\n              }\n            },\n            children: pages.map((page, index) => {\n              const {\n                pageTitle,\n                pageURL\n              } = page;\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => {\n                  handleCloseNavMenu(pageURL);\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: pageTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: \"Flora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: pages.map((page, index) => {\n            const {\n              pageTitle,\n              pageURL\n            } = page;\n            return /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleCloseNavMenu(pageURL),\n              sx: {\n                my: 2,\n                color: 'white',\n                display: 'block'\n              },\n              children: pageTitle\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"gFEeJ8pmZMyXfSHgRHyhitlZ1Xo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/Courtney/Desktop/Bootcamp/flora/client/src/components/Navbar.js"],"names":["React","Container","AppBar","Toolbar","Typography","IconButton","Box","Menu","MenuItem","Button","MenuIcon","useStyles","pages","pageTitle","pageURL","Navbar","props","classes","anchorElNav","setAnchorElNav","useState","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","handlePageChange","navStyle","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","page","index","my","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, AppBar, Toolbar, Typography, IconButton, Box, Menu, MenuItem, Button} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport useStyles from '../styles';\nconst pages = [\n    {\n        pageTitle: \"Flora\",\n        pageURL: \"/\",\n    }, \n    {\n        pageTitle: \"Cart\",\n        pageURL: \"/Cart\",\n    },\n    {\n        pageTitle: \"Contact\",\n        pageURL: \"/Contact\",\n    },\n    {\n        pageTitle: \"Spin\",\n        pageURL: \"/Spin\",\n    },\n];\n\nconst Navbar = (props) => {\n\n    const classes = useStyles();\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    }\n    const handleCloseNavMenu = (pageURL) => {\n        setAnchorElNav(null);\n        if (pageURL)\n            props.handlePageChange(pageURL);\n    }\n\n    return (\n        <AppBar className={classes.navStyle} position=\"static\">\n            <Container maxWidth='xl'>\n                <Toolbar disableGutters>\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ mr: 2, display: {xs: 'none', md: 'flex'}}}>\n                        Flora\n                    </Typography>\n                    <Box sx={{ flexGrow: 1, display: {xs: 'flex', md: 'none'}}}>\n                        <IconButton\n                            size=\"large\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={() => {\n                                handleCloseNavMenu(null);\n                            }}\n                        sx={{\n                                display: {xs: 'block', md: 'none'},\n                            }}\n                        >\n                        {pages.map((page, index)=> {\n                            const { pageTitle, pageURL} = page;\n                            return (\n                            <MenuItem key={index} onClick={()=> {\n                                handleCloseNavMenu(pageURL)\n                            }}\n                            > \n                                <Typography textAlign=\"center\">{pageTitle}</Typography>\n                            </MenuItem>\n                            );\n                        })}\n                        </Menu>\n                        </Box>\n                    <Typography\n                    variant=\"h6\"\n                    noWrap\n                    component=\"div\"\n                    sx={{ flexGrow: 1, display: {xs: 'flex',md:'none'}}}\n                    > \n                        Flora\n                    </Typography>\n                    <Box sx={{ flexGrow: 1, display: {xs: 'none', md: 'flex' }}}>\n                        {pages.map((page, index) => {\n                            const { pageTitle, pageURL} = page;\n                            return (\n                            <Button\n                                key={index}\n                                onClick={()=>handleCloseNavMenu(pageURL)}\n                                sx={{ my: 2, color: 'white', display: 'block'}}\n                            >\n                                {pageTitle}\n                            </Button>\n                            );\n                            })}\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    )\n}\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}